PTWD <- cbind(PTWD,filter(WD[i, ]))
PTPM <- cbind(PTPM,filter(PM[i, ]))
PTRH <- cbind(PTRH,filter(RH[i, ]))
}
PTTEMP <- t(PTTEMP)
PTTEMP <- data.frame(PTTEMP)
PTWD <- t(PTWD)
PTWD <- data.frame(PTWD)
PTPM <- t(PTPM)
PTPM <- data.frame(PTPM)
PTRH <- t(PTRH)
PTRH <- data.frame(PTRH)
```
#合併total
```{r}
PTtotal <- bind_cols(PTTEMP,PTWD,PTPM,PTRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
PTtotal$PTPM <- factor(PTtotal$PTPM, levels = c(1:50 ), ordered = TRUE )
PTtotal$PTWD <- factor(PTtotal$PTWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = PTtotal)+
geom_point(aes(x=PTPM,y=PTWD,color=PTPM))
```
#-------------------------------------------------------------------------------屏東ggplot
#------------------------------------------------------------------------------------------苗栗
```{r}
a <- read.csv("空氣品質監測小時值苗栗.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
MLTEMP <- filter(TEMP[1, ])
MLWD <- filter(WD[1, ])
MLPM <- filter(PM[1, ])
MLRH <- filter(RH[1, ])
```
#再和其他的合成一行
```{r}
for (i in 2:3)
{
MLTEMP <- cbind(MLTEMP,filter(TEMP[i, ]))
MLWD <- cbind(MLWD,filter(WD[i, ]))
MLPM <- cbind(MLPM,filter(PM[i, ]))
MLRH <- cbind(MLRH,filter(RH[i, ]))
}
MLTEMP <- t(MLTEMP)
MLTEMP <- data.frame(MLTEMP)
MLWD <- t(MLWD)
MLWD <- data.frame(MLWD)
MLPM <- t(MLPM)
MLPM <- data.frame(MLPM)
MLRH <- t(MLRH)
MLRH <- data.frame(MLRH)
```
#合併total
```{r}
MLtotal <- bind_cols(MLTEMP,MLWD,MLPM,MLRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
MLtotal$MLPM <- factor(MLtotal$MLPM, levels = c(1:50 ), ordered = TRUE )
MLtotal$MLWD <- factor(MLtotal$MLWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = MLtotal)+
geom_point(aes(x=MLPM,y=MLWD,color=MLPM))
```
#-------------------------------------------------------------------------------苗栗ggplot
#------------------------------------------------------------------------------------------桃園
```{r}
a <- read.csv("空氣品質監測小時值桃園.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
TYTEMP <- filter(TEMP[1, ])
TYWD <- filter(WD[1, ])
TYPM <- filter(PM[1, ])
TYRH <- filter(RH[1, ])
```
#再和其他的合成一行
```{r}
for (i in 2:6)
{
TYTEMP <- cbind(TYTEMP,filter(TEMP[i, ]))
TYWD <- cbind(TYWD,filter(WD[i, ]))
TYPM <- cbind(TYPM,filter(PM[i, ]))
TYRH <- cbind(TYRH,filter(RH[i, ]))
}
TYTEMP <- t(TYTEMP)
TYTEMP <- data.frame(TYTEMP)
TYWD <- t(TYWD)
TYWD <- data.frame(TYWD)
TYPM <- t(TYPM)
TYPM <- data.frame(TYPM)
TYRH <- t(TYRH)
TYRH <- data.frame(TYRH)
```
#合併total
```{r}
TYtotal <- bind_cols(TYTEMP,TYWD,TYPM,TYRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
TYtotal$TYPM <- factor(TYtotal$TYPM, levels = c(1:50 ), ordered = TRUE )
TYtotal$TYWD <- factor(TYtotal$TYWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = TYtotal)+
geom_point(aes(x=TYPM,y=TYWD,color=TYPM))
```
#-------------------------------------------------------------------------------桃園ggplot
#------------------------------------------------------------------------------------------連江
```{r}
a <- read.csv("空氣品質監測小時值連江.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
LCTEMP <- filter(TEMP[1, ])
LCWD <- filter(WD[1, ])
LCPM <- filter(PM[1, ])
LCRH <- filter(RH[1, ])
LCTEMP <- t(LCTEMP)
LCTEMP <- data.frame(LCTEMP)
LCWD <- t(LCWD)
LCWD <- data.frame(LCWD)
LCPM <- t(LCPM)
LCPM <- data.frame(LCPM)
LCRH <- t(LCRH)
LCRH <- data.frame(LCRH)
```
#合併total
```{r}
LCtotal <- bind_cols(LCTEMP,LCWD,LCPM,LCRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
LCtotal$LCPM <- factor(LCtotal$LCPM, levels = c(1:50 ), ordered = TRUE )
LCtotal$LCWD <- factor(LCtotal$LCWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = LCtotal)+
geom_point(aes(x=LCPM,y=LCWD,color=LCPM))
```
#-------------------------------------------------------------------------------連江ggplot
#------------------------------------------------------------------------------------------高雄
```{r}
a <- read.csv("空氣品質監測小時值高雄.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除多的一行(高雄的數據)
```{r}
WD = WD[-8, ]
RH = RH[-8, ]
TEMP = TEMP[-8, ]
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
KHTEMP <- filter(TEMP[1, ])
KHWD <- filter(WD[1, ])
KHPM <- filter(PM[1, ])
KHRH <- filter(RH[1, ])
```
#再和其他的合成一行
```{r}
for (i in 2:11)
{
KHTEMP <- cbind(KHTEMP,filter(TEMP[i, ]))
KHWD <- cbind(KHWD,filter(WD[i, ]))
KHPM <- cbind(KHPM,filter(PM[i, ]))
KHRH <- cbind(KHRH,filter(RH[i, ]))
}
KHTEMP <- t(KHTEMP)
KHTEMP <- data.frame(KHTEMP)
KHWD <- t(KHWD)
KHWD <- data.frame(KHWD)
KHPM <- t(KHPM)
KHPM <- data.frame(KHPM)
KHRH <- t(KHRH)
KHRH <- data.frame(KHRH)
```
#合併total
```{r}
KHtotal <- bind_cols(KHTEMP,KHWD,KHPM,KHRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
KHtotal$KHPM <- factor(KHtotal$KHPM, levels = c(1:50 ), ordered = TRUE )
KHtotal$KHWD <- factor(KHtotal$KHWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = KHtotal)+
geom_point(aes(x=KHPM,y=KHWD,color=KHPM))
```
#-------------------------------------------------------------------------------高雄ggplot
#------------------------------------------------------------------------------------------基隆
```{r}
a <- read.csv("空氣品質監測小時值基隆.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
KLTEMP <- filter(TEMP[1, ])
KLWD <- filter(WD[1, ])
KLPM <- filter(PM[1, ])
KLRH <- filter(RH[1, ])
KLTEMP <- t(KLTEMP)
KLTEMP <- data.frame(KLTEMP)
KLWD <- t(KLWD)
KLWD <- data.frame(KLWD)
KLPM <- t(KLPM)
KLPM <- data.frame(KLPM)
KLRH <- t(KLRH)
KLRH <- data.frame(KLRH)
```
#合併total
```{r}
KLtotal <- bind_cols(KLTEMP,KLWD,KLPM,KLRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
KLtotal$KLPM <- factor(KLtotal$KLPM, levels = c(1:50 ), ordered = TRUE )
KLtotal$KLWD <- factor(KLtotal$KLWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = KLtotal)+
geom_point(aes(x=KLPM,y=KLWD,color=KLPM))
```
#-------------------------------------------------------------------------------基隆ggplot
#------------------------------------------------------------------------------------------雲林
```{r}
a <- read.csv("空氣品質監測小時值雲林.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
YLTEMP <- filter(TEMP[1, ])
YLWD <- filter(WD[1, ])
YLPM <- filter(PM[1, ])
YLRH <- filter(RH[1, ])
```
#再和其他的合成一行
```{r}
for (i in 2:4)
{
YLTEMP <- cbind(YLTEMP,filter(TEMP[i, ]))
YLWD <- cbind(YLWD,filter(WD[i, ]))
YLPM <- cbind(YLPM,filter(PM[i, ]))
YLRH <- cbind(YLRH,filter(RH[i, ]))
}
YLTEMP <- t(YLTEMP)
YLTEMP <- data.frame(YLTEMP)
YLWD <- t(YLWD)
YLWD <- data.frame(YLWD)
YLPM <- t(YLPM)
YLPM <- data.frame(YLPM)
YLRH <- t(YLRH)
YLRH <- data.frame(YLRH)
```
#合併total
```{r}
YLtotal <- bind_cols(YLTEMP,YLWD,YLPM,YLRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
YLtotal$YLPM <- factor(YLtotal$YLPM, levels = c(1:50 ), ordered = TRUE )
YLtotal$YLWD <- factor(YLtotal$YLWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = YLtotal)+
geom_point(aes(x=YLPM,y=YLWD,color=YLPM))
```
#-------------------------------------------------------------------------------雲林ggplot
#------------------------------------------------------------------------------------------新竹市
```{r}
a <- read.csv("空氣品質監測小時值新竹市.csv")
```
#選出需要的測項
```{r}
TEMP = filter(a, 測項.單位. %in% "溫度 AMB_TEMP (℃)")
WD = filter(a, 測項.單位. %in% "風向 WIND_DIREC (degrees)")
PM = filter(a, 測項.單位. %in% "細懸浮微粒 PM 2.5  (μg/m 3 )")
RH = filter(a, 測項.單位. %in% "相對濕度 RH (percent)")
```
#刪除1~6不要的數據
```{r}
for (x in (1:6))
{
TEMP <- TEMP[ ,-1]
WD <- WD[ ,-1]
PM <- PM[ ,-1]
RH <- RH[ ,-1]
}
```
#取數值
```{r}
HCTTEMP <- filter(TEMP[1, ])
HCTWD <- filter(WD[1, ])
HCTPM <- filter(PM[1, ])
HCTRH <- filter(RH[1, ])
HCTTEMP <- t(HCTTEMP)
HCTTEMP <- data.frame(HCTTEMP)
HCTWD <- t(HCTWD)
HCTWD <- data.frame(HCTWD)
HCTPM <- t(HCTPM)
HCTPM <- data.frame(HCTPM)
HCTRH <- t(HCTRH)
HCTRH <- data.frame(HCTRH)
```
# 需先把數值轉成CHAR再轉NUM,才不會出現不是數字的錯誤
```{r}
```
#合併total
```{r}
HCTtotal <- bind_cols(HCTTEMP,HCTWD,HCTPM,HCTRH)
```
#照數字大小排列!!沒做的話,排序會怪怪的
```{r}
HCTtotal$HCTPM <- factor(HCTtotal$HCTPM, levels = c(1:50 ), ordered = TRUE )
HCTtotal$HCTWD <- factor(HCTtotal$HCTWD, levels = c(1:360 ), ordered = TRUE )
```
#散佈圖
```{r}
ggplot(data = HCTtotal)+
geom_point(aes(x=HCTPM,y=HCTWD,color=HCTPM))
```
#-------------------------------------------------------------------------------新竹市ggplot
# 從散佈圖看出，空氣差似乎和風向沒有直接關係
# 於是把各縣市PM.25平均值做個比較
#--------------------------------------------------------------------------取各縣市PM2.5平均值
#需先把數值轉成CHAR再轉NUM,才不會出現不是數字的錯誤
```{r}
HCTPM2.5avg <- as.numeric(as.character(HCTPM$HCTPM, na.rm = TRUE))
HCTPM2.5avg <- data.frame(HCTPM2.5avg)
HCTPM2.5avg <- (colMeans(HCTPM2.5avg, na.rm = TRUE))
HLPM2.5avg <- as.numeric(as.character(HLPM$HLPM, na.rm = TRUE))
HLPM2.5avg <- data.frame(HLPM2.5avg)
HLPM2.5avg <- (colMeans(HLPM2.5avg, na.rm = TRUE))
ILPM2.5avg <- as.numeric(as.character(ILPM$ILPM, na.rm = TRUE))
ILPM2.5avg <- data.frame(ILPM2.5avg)
ILPM2.5avg <- (colMeans(ILPM2.5avg, na.rm = TRUE))
KHPM2.5avg <- as.numeric(as.character(KHPM$KHPM, na.rm = TRUE))
KHPM2.5avg <- data.frame(KHPM2.5avg)
KHPM2.5avg <- (colMeans(KHPM2.5avg, na.rm = TRUE))
KLPM2.5avg <- as.numeric(as.character(KLPM$KLPM, na.rm = TRUE))
KLPM2.5avg <- data.frame(KLPM2.5avg)
KLPM2.5avg <- (colMeans(KLPM2.5avg, na.rm = TRUE))
KMPM2.5avg <- as.numeric(as.character(KMPM$KMPM, na.rm = TRUE))
KMPM2.5avg <- data.frame(KMPM2.5avg)
KMPM2.5avg <- (colMeans(KMPM2.5avg, na.rm = TRUE))
LCPM2.5avg <- as.numeric(as.character(LCPM$LCPM, na.rm = TRUE))
LCPM2.5avg <- data.frame(LCPM2.5avg)
LCPM2.5avg <- (colMeans(LCPM2.5avg, na.rm = TRUE))
MLPM2.5avg <- as.numeric(as.character(MLPM$MLPM, na.rm = TRUE))
MLPM2.5avg <- data.frame(MLPM2.5avg)
MLPM2.5avg <- (colMeans(MLPM2.5avg, na.rm = TRUE))
NTPM2.5avg <- as.numeric(as.character(NTPM$NTPM, na.rm = TRUE))
NTPM2.5avg <- data.frame(NTPM2.5avg)
NTPM2.5avg <- (colMeans(NTPM2.5avg, na.rm = TRUE))
PTPM2.5avg <- as.numeric(as.character(PTPM$PTPM, na.rm = TRUE))
PTPM2.5avg <- data.frame(PTPM2.5avg)
PTPM2.5avg <- (colMeans(PTPM2.5avg, na.rm = TRUE))
TCPM2.5avg <- as.numeric(as.character(TCPM$TCPM, na.rm = TRUE))
TCPM2.5avg <- data.frame(TCPM2.5avg)
TCPM2.5avg <- (colMeans(TCPM2.5avg, na.rm = TRUE))
TNPM2.5avg <- as.numeric(as.character(TNPM$TNPM, na.rm = TRUE))
TNPM2.5avg <- data.frame(TNPM2.5avg)
TNPM2.5avg <- (colMeans(TNPM2.5avg, na.rm = TRUE))
TPPM2.5avg <- as.numeric(as.character(TPPM$TPPM, na.rm = TRUE))
TPPM2.5avg <- data.frame(TPPM2.5avg)
TPPM2.5avg <- (colMeans(TPPM2.5avg, na.rm = TRUE))
TTPM2.5avg <- as.numeric(as.character(TTPM$TTPM, na.rm = TRUE))
TTPM2.5avg <- data.frame(TTPM2.5avg)
TTPM2.5avg <- (colMeans(TTPM2.5avg, na.rm = TRUE))
TYPM2.5avg <- as.numeric(as.character(TYPM$TYPM, na.rm = TRUE))
TYPM2.5avg <- data.frame(TYPM2.5avg)
TYPM2.5avg <- (colMeans(TYPM2.5avg, na.rm = TRUE))
YLPM2.5avg <- as.numeric(as.character(YLPM$YLPM, na.rm = TRUE))
YLPM2.5avg <- data.frame(YLPM2.5avg)
YLPM2.5avg <- (colMeans(YLPM2.5avg, na.rm = TRUE))
#total
PM2.5avgtotal <- data.frame(cbind(HCTPM2.5avg,HLPM2.5avg,ILPM2.5avg,KHPM2.5avg,KLPM2.5avg,KMPM2.5avg,LCPM2.5avg,MLPM2.5avg,NTPM2.5avg,PTPM2.5avg,TCPM2.5avg,TNPM2.5avg,TPPM2.5avg,TTPM2.5avg,TYPM2.5avg,YLPM2.5avg))
ALLavg <- t(PM2.5avgtotal)
ALLavg <- data.frame(ALLavg)
#加一欄縣市名稱
ALLavg$地區 <- c("新竹市","花蓮","宜蘭","高雄","基隆","金門","連江","苗栗","南投","屏東","台中","台南","台北","台東","桃園","雲林")
#看一下數據大小
ALLavg <- ALLavg[order(ALLavg$HCTPM2.5avg, decreasing = FALSE), ]
ALLavg <- data.frame(ALLavg)
```
#-------------------------------------------------------------------------------各縣市PM2.5平均值ggplot
# 各縣市直條圖
#先排列[地區]順序
```{r}
ALLavg$地區 <- factor(ALLavg$地區, levels = c("南投","雲林","金門","連江","新竹市","苗栗","高雄","台中","花蓮","台南","台東","屏東","桃園","台北","基隆","宜蘭"), ordered = TRUE )
```
#長條圖
```{r}
ggplot(ALLavg,aes(x=地區,y=HCTPM2.5avg, fill=地區))+geom_bar(stat="identity",position="dodge")
```
## 結論:一開始用了散佈圖來觀察，發現
### 空氣差
## 和
### 風向
## 沒有直接關係，於是又畫了直條圖來觀察各縣市的空氣品質，發現其實東北部反而比西南部空氣差
